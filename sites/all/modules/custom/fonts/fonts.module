<?php
function fonts_page_alter(&$page) {
    // Adding typography.com fonts
    $attributes = array(
      'href' => '//cloud.typography.com/6025554/793926/css/fonts.css',
      'rel' => 'stylesheet',
      'type' => 'text/css',
    );

    drupal_add_html_head_link($attributes);

    // Adding typekit fonts
    drupal_add_js('https://use.typekit.net/tnm1huy.js', 'external');
    drupal_add_js('try{Typekit.load({ async: true });}catch(e){}',
        array('type' => 'inline'));
}

function fonts_wysiwyg_editor_settings_alter(&$settings, $context){
  // The $context variable contains information about the wysiwyg profile we're using
  // In this case we just need to check that the editor being used is ckeditor
  if ($context['profile']->editor == 'ckeditor')
  {

      // The $settings variable contains all the config options ckeditor uses. 
      // The array keys correspond directly with any setting that can be applied 
      // to CKEditor - as outlined in the CKEditor docs: 
      // http://docs.cksource.com/ckeditor_api/symbols/CKEDITOR.config.html 
      // Another way to override configuration is to use your own configuration javascript
      // file. In this case, we're going to add our own configuration file that will
      // Hold our stylesSet customizations... 
      $settings['allowedContent'] = TRUE;
      $settings['customConfig'] = base_path() . drupal_get_path('module', 'fonts') . '/ckeditor_custom_config.js';
  }
}